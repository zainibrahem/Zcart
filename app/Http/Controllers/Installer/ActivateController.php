<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.1   |
    |              on 2021-03-01 09:45:29              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Installer; use Exception; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; use Illuminate\Routing\Controller; class ActivateController extends Controller { public function activate() { if ($this->checkDatabaseConnection()) { goto AOu6v; } return redirect()->back()->withErrors(["\144\x61\x74\141\142\x61\x73\x65\x5f\143\x6f\156\x6e\145\x63\x74\151\x6f\156" => trans("\x69\x6e\x73\164\x61\154\154\x65\162\137\155\145\163\163\141\x67\145\x73\x2e\145\156\166\151\x72\157\156\x6d\x65\156\164\x2e\x77\151\172\x61\x72\x64\x2e\x66\x6f\162\155\x2e\x64\142\137\143\157\156\x6e\x65\x63\x74\151\x6f\x6e\x5f\146\141\x69\x6c\x65\144")]); AOu6v: return view("\x69\x6e\163\164\x61\x6c\x6c\x65\162\x2e\x61\143\x74\x69\x76\x61\x74\145"); } public function verify(Request $request) { $mysqli_connection = getMysqliConnection(); if ($mysqli_connection) { goto QTasI; } return redirect()->route("\111\156\x73\x74\141\154\154\x65\162\x2e\x61\x63\164\x69\166\x61\164\145")->with(["\146\141\151\154\x65\144" => trans("\162\145\x73\160\x6f\x6e\163\x65\163\x2e\144\141\164\141\x62\x61\x73\x65\x5f\143\157\156\x6e\145\x63\x74\x69\x6f\x6e\137\x66\141\151\x6c\145\x64")])->withInput($request->all()); QTasI: $purchase_verification = aplVerifyEnvatoPurchase($request->purchase_code); if (empty($purchase_verification)) { goto SXbxP; } return redirect()->route("\x49\156\x73\164\x61\x6c\154\x65\x72\x2e\141\143\164\151\x76\141\164\x65")->with(["\x66\x61\x69\x6c\145\x64" => "\x43\x6f\156\x6e\x65\x63\164\151\x6f\x6e" . "\40\164\157\x20\x72\x65\155\157\x74\x65\x20" . "\163\x65\162\166\145\162\x20\x63\141\x6e\47\164\x20\x62\x65" . "\40\145\x73\164\141\x62\x6c\x69\163\x68\x65\144"])->withInput($request->all()); SXbxP: $license_notifications_array = incevioVerify($request->root_url, $request->email_address, $request->purchase_code, $mysqli_connection); if (!($license_notifications_array["\156\157\164\151\146\x69\143\141\164\x69\157\x6e\137\x63\x61\163\x65"] == "\156\157\x74\x69\146\x69\x63\x61\x74\x69\x6f\156\x5f\x6c\x69\143\x65\x6e\163\145\x5f\x6f\153")) { goto p4eyy; } return view("\x69\x6e\x73\x74\x61\154\x6c\x65\x72\x2e\x69\x6e\x73\164\x61\x6c\154", compact("\154\x69\x63\x65\x6e\x73\145\137\156\157\164\x69\x66\x69\143\141\x74\x69\157\x6e\x73\x5f\x61\162\162\x61\171")); p4eyy: if (!($license_notifications_array["\156\x6f\164\x69\146\x69\x63\141\x74\151\157\x6e\137\143\x61\163\145"] == "\x6e\x6f\x74\151\146\151\x63\x61\164\x69\157\x6e\x5f\x61\154\x72\145\x61\144\171\137\x69\156\163\x74\141\154\154\x65\x64")) { goto TJLV5; } $license_notifications_array = incevioAutoloadHelpers($mysqli_connection, 1); if (!($license_notifications_array["\x6e\157\x74\x69\146\151\143\x61\x74\x69\157\156\137\x63\x61\x73\x65"] == "\x6e\157\164\151\146\x69\x63\x61\164\151\x6f\156\x5f\x6c\x69\x63\145\156\x73\145\x5f\157\x6b")) { goto T4xYr; } return view("\151\156\163\x74\x61\x6c\154\x65\162\x2e\x69\x6e\163\164\x61\x6c\154", compact("\x6c\151\x63\145\x6e\163\145\137\156\157\164\x69\146\151\143\x61\x74\151\x6f\156\x73\x5f\141\162\x72\x61\x79")); T4xYr: TJLV5: return redirect()->route("\111\x6e\163\164\141\x6c\x6c\145\162\56\x61\143\164\151\x76\x61\x74\x65")->with(["\x66\141\151\154\x65\144" => $license_notifications_array["\x6e\157\164\x69\x66\x69\x63\141\x74\151\x6f\x6e\x5f\164\145\170\x74"]])->withInput($request->all()); } private function checkDatabaseConnection() { try { DB::connection()->getPdo(); return true; } catch (Exception $e) { return false; } } private function response($message, $status = "\144\x61\156\147\x65\x72") { return ["\163\164\x61\164\x75\163" => $status, "\155\145\163\163\x61\x67\x65" => $message]; } }

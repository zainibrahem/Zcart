<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.1   |
    |              on 2021-04-30 16:15:22              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Services; use DB; use App\Package; use Illuminate\Http\Request; use Illuminate\Support\Str; use Illuminate\Support\Facades\Artisan; class PackageInstaller { public $package; public $slug; public $namespace; public $path; public $migrations; public function __construct(Request $request, array $installable) { $this->package = array_merge($installable, $request->all()); $this->slug = $installable["\x73\154\165\147"]; $this->namespace = "\x5c\111\156\143\x65\166\151\x6f\x5c\x50\141\143\153\x61\147\x65\x5c" . Str::studly($this->slug); $this->path = base_path("\x70\141\x63\153\x61\x67\x65\x73") . DIRECTORY_SEPARATOR . $this->slug; $this->migrations = str_replace(base_path(), '', $this->path . "\57\144\141\x74\141\x62\x61\x73\x65\x2f\x6d\151\147\x72\x61\164\151\157\156\x73"); } public function install() { \Log::info("\x49\x6e\163\164\x61\154\154\x69\156\147\40\x50\x61\143\x6b\141\x67\x65\40" . $this->slug); Package::create(array_merge($this->package, preparePackageInstallation($this->package))); $this->migrate()->seed(); return True; } private function migrate() { \Log::info("\115\x69\x67\x72\141\164\151\x6e\147\40\x73\164\141\x72\x74\145\x64\72\40" . $this->slug); Artisan::call("\155\151\147\x72\x61\164\x65", ["\x2d\55\x70\x61\164\150" => $this->migrations, "\55\x2d\146\x6f\x72\x63\145" => true]); \Log::info(Artisan::output()); return $this; } private function seed() { \Log::info("\123\x65\x65\144\x69\x6e\x67\x20\163\x74\x61\162\164\x65\x64\72\40" . $this->slug); foreach (glob($this->path . "\x2f\144\141\x74\x61\142\141\163\x65\x2f\163\x65\145\144\x73\x2f\x2a\x2e\160\150\x70") as $filename) { include $filename; $classes = get_declared_classes(); $migration = end($classes); Artisan::call("\144\142\72\163\x65\145\144", ["\x2d\55\143\x6c\x61\x73\163" => $migration, "\x2d\x2d\x66\x6f\162\x63\x65" => true]); \Log::info(Artisan::output()); T6q20: } CHWTH: return $this; } public function uninstall() { \Log::info("\125\156\x69\156\163\x74\x61\154\x6c\151\x6e\147\x20\x50\x61\x63\x6b\x61\x67\145\x3a\x20" . $this->slug); $class = $this->namespace . "\x5c\x55\156\x69\156\163\x74\x61\154\x6c\x65\x72"; if (class_exists($class)) { goto gNpmz; } return true; gNpmz: (new $class())->cleanDatabase(); return $this->rollback(); } private function rollback() { \Log::info("\122\x6f\154\154\x69\156\x67\40\142\x61\x63\153\40\x2e\56\56\40" . $this->slug); foreach (array_reverse(glob($this->path . "\x2f\144\141\164\141\x62\141\x73\x65\x2f\155\151\147\x72\141\x74\x69\157\x6e\163\57\x2a\137\x2a\x2e\160\150\160")) as $filename) { include $filename; $migration = str_replace("\56\160\x68\x70", '', basename($filename)); \Log::info("\122\157\x6c\x6c\x69\x6e\x67\40\142\141\143\x6b\72\40" . $migration); $class = Str::studly(implode("\x5f", array_slice(explode("\x5f", $migration), 4))); (new $class())->down(); if (DB::table("\x6d\x69\x67\162\141\x74\151\x6f\156\x73")->where("\155\151\x67\162\x61\x74\151\157\156", $migration)->delete()) { goto NH9bj; } \Log::info("\122\x6f\154\154\142\x61\143\153\40\x46\101\x49\114\105\x44\x3a\40" . $migration); goto Rm9vi; NH9bj: \Log::info("\x52\157\154\154\x65\144\x20\142\141\143\x6b\x3a\x20" . $migration); Rm9vi: EpwKX: } LqQxP: return $this; } }